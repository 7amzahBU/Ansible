---
- name: find installed voluem
  hosts: "{{hostname}}"
  connection: local
  gather_facts: false
  # vars:
  #   image: BIGIP-14.1.0.0.0.116.iso
  tasks:
  - name: list sys software image
    bigip_command:
      commands: list sys software image
      provider: "{{ provider }}"
    register: sw_images
  - name: stdoutline to fact
    ansible.builtin.set_fact:
      stdout_lines: "{{ sw_images.stdout_lines[0] }}"

  - name: one string
    ansible.builtin.set_fact:
      string: "{{ sw_images.stdout_lines[0] | join(' ') }}"

  - name: list of software image
    ansible.builtin.set_fact:
      list: "{{ string | regex_findall('[^}]+') | list }}"

  - name: Initialize list to hold image data
    set_fact:
      software_images: []
  - name: Extract software image name and version
    set_fact:
      software_images: "{{ software_images + [{'image_name': (item | regex_findall('sys software image\\s+(\\S+\\.iso)') | first ), 'version': (item | regex_findall('version\\s+([\\d\\.]+)') | first)}] }}"
    loop: "{{ list }}"
    when: "'version' in item or 'sys' in item"
  - name: Initialize list to hold image data
    set_fact:
      target_image_version: "no image"
  - name: Extract software image name and version
    ansible.builtin.set_fact:
      target_image_version: "{{ item.version | default('no image')}}"
    loop: "{{ software_images }}"
    when: item.image_name == "{{image}}"
  - name: Checking file result
    ansible.builtin.fail:
      msg: Image {{image}} is not on the device
    when: target_image_version == "no image"
  - name: show sys software status
    bigip_command:
      commands: show sys software status
      provider: "{{ provider }}"
    register: sw_status_output
  - name: set software status output as fact
    ansible.builtin.set_fact:
      hd_list: "{{ sw_status_output.stdout_lines[0] | regex_findall ('(HD\\S+ )\\s+BIG-IP\\s+(\\S+)\\s+\\S+\\s+(\\S+)\\s+(\\w+)') }}"
  - name: filter hd_list for not matching NM1_code, N_code and not non_active
    ansible.builtin.set_fact:
      filtered_list: "{{ (hd_list | selectattr('2', '==', 'no') | selectattr('3', '==', 'complete')| selectattr('1', '==', target_image_version ) | list) }}"
  - name: set new HD as fact
    ansible.builtin.set_fact:
      new_sw_hd: "{{filtered_list[0][0] | trim}}"
